import re

# Function to assess the strength of the password
def assess_password_strength(password):
    length = len(password)
    has_lower = has_upper = has_digit = has_special = False
    score = 0

    # Check password characteristics
    for ch in password:
        if ch.islower():
            has_lower = True
        elif ch.isupper():
            has_upper = True
        elif ch.isdigit():
            has_digit = True
        elif ch in "@$!%*?&#":
            has_special = True

    # Calculate score based on length and characteristics
    if length >= 8:
        score += 2
    if length >= 12:
        score += 2
    if has_lower:
        score += 2
    if has_upper:
        score += 2
    if has_digit:
        score += 1
    if has_special:
        score += 2

    return min(score, 10)

# Function to provide feedback on how to improve the password
def provide_feedback(password):
    length = len(password)
    has_lower = has_upper = has_digit = has_special = False

    # Check password characteristics
    for ch in password:
        if ch.islower():
            has_lower = True
        elif ch.isupper():
            has_upper = True
        elif ch.isdigit():
            has_digit = True
        elif ch in "@$!%*?&#":
            has_special = True

    # Provide feedback based on missing characteristics
    print("\nFeedback:")
    if length < 8:
        print("- Password should be at least 8 characters long.")
    if not has_lower:
        print("- Password should contain at least one lowercase letter.")
    if not has_upper:
        print("- Password should contain at least one uppercase letter.")
    if not has_digit:
        print("- Password should contain at least one digit.")
    if not has_special:
        print("- Password should contain at least one special character (@, $, !, %, *, ?, &, #).")
    if length >= 8 and length < 12:
        print("- For extra security, consider using a password with 12 or more characters.")
    if length >= 8 and has_lower and has_upper and has_digit and has_special:
        print("- Your password is strong!")

# Function to assess password and provide feedback
def assess_and_give_feedback(password):
    score = assess_password_strength(password)
    print("\nPassword Strength: ", end="")

    # Display strength based on score
    if score == 10:
        print("Very Strong (Score: 10/10)")
    elif score >= 8:
        print(f"Strong (Score: {score}/10)")
    elif score >= 6:
        print(f"Medium (Score: {score}/10)")
    elif score >= 4:
        print(f"Weak (Score: {score}/10)")
    else:
        print(f"Very Weak (Score: {score}/10)")

    provide_feedback(password)

if __name__ == "__main__":
    print("Password Strength Assessment Tool")
    password = input("Enter your password: ")  # Input password
    assess_and_give_feedback(password)
